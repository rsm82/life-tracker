package org.rsm.finjournal.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2014-11-24T12:13:11.947-05:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "FinjournalService", 
                  wsdlLocation = "file:/C:/rsmtemp/projects/finjournalws-parent/finjournalws-services/src/main/webapp/wsdl/FinjournalService.wsdl",
                  targetNamespace = "org:rsm:finjournal:service") 
public class FinjournalService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("org:rsm:finjournal:service", "FinjournalService");
    public final static QName FinjournalServiceSOAP = new QName("org:rsm:finjournal:service", "FinjournalServiceSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/rsmtemp/projects/finjournalws-parent/finjournalws-services/src/main/webapp/wsdl/FinjournalService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FinjournalService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/rsmtemp/projects/finjournalws-parent/finjournalws-services/src/main/webapp/wsdl/FinjournalService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public FinjournalService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FinjournalService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FinjournalService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns FinjournalService
     */
    @WebEndpoint(name = "FinjournalServiceSOAP")
    public FinjournalService getFinjournalServiceSOAP() {
        return super.getPort(FinjournalServiceSOAP, FinjournalService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FinjournalService
     */
    @WebEndpoint(name = "FinjournalServiceSOAP")
    public FinjournalService getFinjournalServiceSOAP(WebServiceFeature... features) {
        return super.getPort(FinjournalServiceSOAP, FinjournalService.class, features);
    }

}
